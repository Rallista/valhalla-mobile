/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package Models

import Models.EdgeUse
import Models.RoadClass
import Models.Traversability

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * 
 *
 * @param beginHeading The direction at the beginning of an edge. The units are degrees clockwise from north.
 * @param fromEdgeNameConsistency True if this intersecting edge at the end node has consistent names with the path from the other edge.
 * @param toEdgeNameConsistency True if this intersecting edge at the end node has consistent names with the path to the other edge.
 * @param driveability 
 * @param cyclability 
 * @param walkability 
 * @param use 
 * @param roadClass 
 */


data class IntersectingEdge (

    /* The direction at the beginning of an edge. The units are degrees clockwise from north. */
    @Json(name = "begin_heading")
    val beginHeading: kotlin.Int? = null,

    /* True if this intersecting edge at the end node has consistent names with the path from the other edge. */
    @Json(name = "from_edge_name_consistency")
    val fromEdgeNameConsistency: kotlin.Boolean? = null,

    /* True if this intersecting edge at the end node has consistent names with the path to the other edge. */
    @Json(name = "to_edge_name_consistency")
    val toEdgeNameConsistency: kotlin.Boolean? = null,

    @Json(name = "driveability")
    val driveability: Traversability? = null,

    @Json(name = "cyclability")
    val cyclability: Traversability? = null,

    @Json(name = "walkability")
    val walkability: Traversability? = null,

    @Json(name = "use")
    val use: EdgeUse? = null,

    @Json(name = "road_class")
    val roadClass: RoadClass? = null

)

