/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package Models


import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * 
 *
 * @param predicted Does this edge have predicted (historical) speed records?
 * @param constrainedFlow Speed when there is no traffic, in kph.
 * @param freeFlow Speed when there is heavy traffic, in kph.
 * @param type The type of speed which is used when setting default speeds. When `tagged`, the explicit `max_speed` tags from OpenStreetMap are being used. When `classified`, the values are being inferred from the highway classification.
 * @param default The default speed used for calculations. NOTE: Values greater than 250 are used for special cases and should not be treated as literal.
 */


data class Speeds (

    /* Does this edge have predicted (historical) speed records? */
    @Json(name = "predicted")
    val predicted: kotlin.Boolean? = null,

    /* Speed when there is no traffic, in kph. */
    @Json(name = "constrained_flow")
    val constrainedFlow: kotlin.Int? = null,

    /* Speed when there is heavy traffic, in kph. */
    @Json(name = "free_flow")
    val freeFlow: kotlin.Int? = null,

    /* The type of speed which is used when setting default speeds. When `tagged`, the explicit `max_speed` tags from OpenStreetMap are being used. When `classified`, the values are being inferred from the highway classification. */
    @Json(name = "type")
    val type: Speeds.Type? = null,

    /* The default speed used for calculations. NOTE: Values greater than 250 are used for special cases and should not be treated as literal. */
    @Json(name = "default")
    val default: kotlin.Int? = null

) {

    /**
     * The type of speed which is used when setting default speeds. When `tagged`, the explicit `max_speed` tags from OpenStreetMap are being used. When `classified`, the values are being inferred from the highway classification.
     *
     * Values: classified,tagged
     */
    @JsonClass(generateAdapter = false)
    enum class Type(val value: kotlin.String) {
        @Json(name = "classified") classified("classified"),
        @Json(name = "tagged") tagged("tagged");
    }
}

