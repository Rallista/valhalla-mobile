/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package Models


import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * 
 *
 * @param lat The latitude of the matched point.
 * @param lon The longitude of the matched point.
 * @param type 
 * @param edgeIndex The index of the edge in the list of `edges`. This key will be missing if the point is unmatched.
 * @param beginRouteDiscontinuity If true, this match result is the begin location of a route discontinuity.
 * @param endRouteDiscontinuity If true, this match result is the end location of a route discontinuity.
 * @param distanceAlongEdge The distance along the associated edge for this matched point, expressed as a value between 0 and 1. For example, if the matched point is halfway along the edge, then the value will be 0.5. This key will be absent if the point is unmatched.
 * @param distanceFromTracePoint The distance in meters from the trace point to the matched point. This key will be absent if the point is unmatched.
 */


data class MatchedPoint (

    /* The latitude of the matched point. */
    @Json(name = "lat")
    val lat: kotlin.Double,

    /* The longitude of the matched point. */
    @Json(name = "lon")
    val lon: kotlin.Double,

    @Json(name = "type")
    val type: MatchedPoint.Type,

    /* The index of the edge in the list of `edges`. This key will be missing if the point is unmatched. */
    @Json(name = "edge_index")
    val edgeIndex: kotlin.Int? = null,

    /* If true, this match result is the begin location of a route discontinuity. */
    @Json(name = "begin_route_discontinuity")
    val beginRouteDiscontinuity: kotlin.Boolean? = false,

    /* If true, this match result is the end location of a route discontinuity. */
    @Json(name = "end_route_discontinuity")
    val endRouteDiscontinuity: kotlin.Boolean? = false,

    /* The distance along the associated edge for this matched point, expressed as a value between 0 and 1. For example, if the matched point is halfway along the edge, then the value will be 0.5. This key will be absent if the point is unmatched. */
    @Json(name = "distance_along_edge")
    val distanceAlongEdge: kotlin.Double? = null,

    /* The distance in meters from the trace point to the matched point. This key will be absent if the point is unmatched. */
    @Json(name = "distance_from_trace_point")
    val distanceFromTracePoint: kotlin.Double? = null

) {

    /**
     * 
     *
     * Values: unmatched,interpolated,matched
     */
    @JsonClass(generateAdapter = false)
    enum class Type(val value: kotlin.String) {
        @Json(name = "unmatched") unmatched("unmatched"),
        @Json(name = "interpolated") interpolated("interpolated"),
        @Json(name = "matched") matched("matched");
    }
}

