/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package Models

import Models.AdminRegion
import Models.MatchedPoint
import Models.TraceEdge

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * 
 *
 * @param edges The list of edges matched along the path.
 * @param admins The set of administrative regions matched along the path. Rather than repeating this information for every end node, the admins in this list are referenced by index.
 * @param matchedPoints List of match results when using the map_snap shape match algorithm. There is a one-to-one correspondence with the input set of latitude, longitude coordinates and this list of match results.
 * @param osmChangeset 
 * @param shape The encoded polyline (https://developers.google.com/maps/documentation/utilities/polylinealgorithm) of the matched path.
 * @param confidenceScore 
 */


data class TraceAttributesBaseResponse (

    /* The list of edges matched along the path. */
    @Json(name = "edges")
    val edges: kotlin.collections.List<TraceEdge>? = null,

    /* The set of administrative regions matched along the path. Rather than repeating this information for every end node, the admins in this list are referenced by index. */
    @Json(name = "admins")
    val admins: kotlin.collections.List<AdminRegion>? = null,

    /* List of match results when using the map_snap shape match algorithm. There is a one-to-one correspondence with the input set of latitude, longitude coordinates and this list of match results. */
    @Json(name = "matched_points")
    val matchedPoints: kotlin.collections.List<MatchedPoint>? = null,

    @Json(name = "osm_changeset")
    val osmChangeset: kotlin.Int? = null,

    /* The encoded polyline (https://developers.google.com/maps/documentation/utilities/polylinealgorithm) of the matched path. */
    @Json(name = "shape")
    val shape: kotlin.String? = null,

    @Json(name = "confidence_score")
    val confidenceScore: kotlin.Double? = null

)

