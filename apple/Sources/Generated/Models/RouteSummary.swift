//
// RouteSummary.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
    import AnyCodable
#endif

public struct RouteSummary: Codable, JSONEncodable, Hashable {
    /** The estimated travel time, in seconds */
    public var time: Double
    /** The estimated travel distance, in `units` (km or mi) */
    public var length: Double
    /** The minimum latitude of the bounding box containing the route. */
    public var minLat: Double
    /** The maximum latitude of the bounding box containing the route. */
    public var maxLat: Double
    /** The minimum longitude of the bounding box containing the route. */
    public var minLon: Double
    /** The maximum longitude of the bounding box containing the route. */
    public var maxLon: Double

    public init(time: Double, length: Double, minLat: Double, maxLat: Double, minLon: Double, maxLon: Double) {
        self.time = time
        self.length = length
        self.minLat = minLat
        self.maxLat = maxLat
        self.minLon = minLon
        self.maxLon = maxLon
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case time
        case length
        case minLat = "min_lat"
        case maxLat = "max_lat"
        case minLon = "min_lon"
        case maxLon = "max_lon"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(time, forKey: .time)
        try container.encode(length, forKey: .length)
        try container.encode(minLat, forKey: .minLat)
        try container.encode(maxLat, forKey: .maxLat)
        try container.encode(minLon, forKey: .minLon)
        try container.encode(maxLon, forKey: .maxLon)
    }
}
