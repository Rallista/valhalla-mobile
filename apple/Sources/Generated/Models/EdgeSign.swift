//
// EdgeSign.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
    import AnyCodable
#endif

public struct EdgeSign: Codable, JSONEncodable, Hashable {
    public var exitNumber: [String]?
    public var exitBranch: [String]?
    public var exitToward: [String]?
    public var exitName: [String]?

    public init(exitNumber: [String]? = nil, exitBranch: [String]? = nil, exitToward: [String]? = nil, exitName: [String]? = nil) {
        self.exitNumber = exitNumber
        self.exitBranch = exitBranch
        self.exitToward = exitToward
        self.exitName = exitName
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case exitNumber = "exit_number"
        case exitBranch = "exit_branch"
        case exitToward = "exit_toward"
        case exitName = "exit_name"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(exitNumber, forKey: .exitNumber)
        try container.encodeIfPresent(exitBranch, forKey: .exitBranch)
        try container.encodeIfPresent(exitToward, forKey: .exitToward)
        try container.encodeIfPresent(exitName, forKey: .exitName)
    }
}
