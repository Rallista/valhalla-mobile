//
// TzResponse.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
    import AnyCodable
#endif

public struct TzResponse: Codable, JSONEncodable, Hashable {
    /** The canonical time zone ID. In the event that multiple time zones could be returned, the first one from the Unicode CLDR timezone.xml is returned. */
    public var tzId: String
    /** The base offset, in seconds, from UTC that is normally in effect for this time zone. */
    public var baseUtcOffset: Int
    /** The special offset, in seconds, from UTC that is in effect for this time zone as of the queried timestamp (defaults to now). If no additional offsets are in effect, this value is zero. This typically reflects Daylight Saving Time, but may indicate other special offsets. To get the total offset in effect, add `dst_offset` and `utc_offset` together. */
    public var dstOffset: Int

    public init(tzId: String, baseUtcOffset: Int, dstOffset: Int) {
        self.tzId = tzId
        self.baseUtcOffset = baseUtcOffset
        self.dstOffset = dstOffset
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case tzId = "tz_id"
        case baseUtcOffset = "base_utc_offset"
        case dstOffset = "dst_offset"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(tzId, forKey: .tzId)
        try container.encode(baseUtcOffset, forKey: .baseUtcOffset)
        try container.encode(dstOffset, forKey: .dstOffset)
    }
}
