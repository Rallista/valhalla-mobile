//
// Access.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
    import AnyCodable
#endif

public struct Access: Codable, JSONEncodable, Hashable {
    public var golfCart: Bool?
    public var wheelchair: Bool?
    public var taxi: Bool?
    public var HOV: Bool?
    public var truck: Bool?
    public var emergency: Bool?
    public var pedestrian: Bool?
    public var car: Bool?
    public var bus: Bool?
    public var bicycle: Bool?
    public var motorcycle: Bool?
    public var moped: Bool?

    public init(golfCart: Bool? = nil, wheelchair: Bool? = nil, taxi: Bool? = nil, HOV: Bool? = nil, truck: Bool? = nil, emergency: Bool? = nil, pedestrian: Bool? = nil, car: Bool? = nil, bus: Bool? = nil, bicycle: Bool? = nil, motorcycle: Bool? = nil, moped: Bool? = nil) {
        self.golfCart = golfCart
        self.wheelchair = wheelchair
        self.taxi = taxi
        self.HOV = HOV
        self.truck = truck
        self.emergency = emergency
        self.pedestrian = pedestrian
        self.car = car
        self.bus = bus
        self.bicycle = bicycle
        self.motorcycle = motorcycle
        self.moped = moped
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case golfCart = "golf_cart"
        case wheelchair
        case taxi
        case HOV
        case truck
        case emergency
        case pedestrian
        case car
        case bus
        case bicycle
        case motorcycle
        case moped
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(golfCart, forKey: .golfCart)
        try container.encodeIfPresent(wheelchair, forKey: .wheelchair)
        try container.encodeIfPresent(taxi, forKey: .taxi)
        try container.encodeIfPresent(HOV, forKey: .HOV)
        try container.encodeIfPresent(truck, forKey: .truck)
        try container.encodeIfPresent(emergency, forKey: .emergency)
        try container.encodeIfPresent(pedestrian, forKey: .pedestrian)
        try container.encodeIfPresent(car, forKey: .car)
        try container.encodeIfPresent(bus, forKey: .bus)
        try container.encodeIfPresent(bicycle, forKey: .bicycle)
        try container.encodeIfPresent(motorcycle, forKey: .motorcycle)
        try container.encodeIfPresent(moped, forKey: .moped)
    }
}
