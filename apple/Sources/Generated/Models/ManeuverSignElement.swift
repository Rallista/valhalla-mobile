//
// ManeuverSignElement.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
    import AnyCodable
#endif

public struct ManeuverSignElement: Codable, JSONEncodable, Hashable {
    /** The interchange sign text (varies based on the context; see the `maneuverSign` schema). */
    public var text: String
    /** True if the sign is a route number. */
    public var isRouteNumber: Bool?
    /** The frequency of this sign element within a set a consecutive signs. */
    public var consecutiveCount: Int?

    public init(text: String, isRouteNumber: Bool? = nil, consecutiveCount: Int? = nil) {
        self.text = text
        self.isRouteNumber = isRouteNumber
        self.consecutiveCount = consecutiveCount
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case text
        case isRouteNumber = "is_route_number"
        case consecutiveCount = "consecutive_count"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(text, forKey: .text)
        try container.encodeIfPresent(isRouteNumber, forKey: .isRouteNumber)
        try container.encodeIfPresent(consecutiveCount, forKey: .consecutiveCount)
    }
}
