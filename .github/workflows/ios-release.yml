name: iOS Release

on:
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      bump_version_scheme:
        type: choice
        description: 'Release'
        required: true
        default: 'patch'
        options:
        - 'patch'
        - 'minor'
        - 'major'

jobs:
  build-release:
    runs-on: macos-14
    timeout-minutes: 120

    steps:
    - name: Install conan
      run: |
        brew install conan

    - name: Install boost
      run: |
        brew install boost

    - name: Checkout Valhalla
      uses: actions/checkout@v4

    - name: Build for iOS & iOS Simulator
      run: |
        git submodule update --init --recursive
        ./build.sh ios clean

    - name: Zip the xcframework
      run: |
        cd build/apple
        zip -r valhalla-wrapper.xcframework.zip valhalla-wrapper.xcframework
        mv valhalla-wrapper.xcframework.zip ../../
        cd ../../

    - name: Upload xcframework zip output
      uses: actions/upload-artifact@v4
      with:
        name: valhalla-wrapper.xcframework.zip
        path: |
          valhalla-wrapper.xcframework.zip

  draft-release:
    runs-on: macos-14
    needs: build-release
    outputs:
      version: ${{ steps.version.outputs.version }}
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    steps:
    - name: Checkout Valhalla
      uses: actions/checkout@v4

    - name: Configure Git
      run: |
        git config user.name github-actions
        git config user.email github-actions@github.com

    - name: Download the xcframework artifact from the build-and-test
      uses: actions/download-artifact@v4
      with:
        name: valhalla-wrapper.xcframework.zip

    - name: Write the xcframework to Package.swift
      run: ./scripts/write_xcframework_spm.sh

    - name: Get version tag
      id: version
      run: ./scripts/version_bump.sh ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' && 'patch' || inputs.bump_version_scheme }}

    - uses: ncipollo/release-action@v1
      with:
        prerelease: true
        draft: true
        generateReleaseNotes: true
        tag: ${{ steps.version.outputs.version }}
        artifacts: "valhalla-wrapper.xcframework.zip"
      
    - name: Generate and commit the Package.swift
      run: |
        git add .
        git commit -m "Update Package.swift with new xcframework [ci skip]"
        git tag -a ${{ steps.version.outputs.version }}-actual -m "Version v${{ steps.version.outputs.version }}"
        git push

    - name: Output version
      run: echo "version=${{ steps.version.outputs.version }}" >> "$GITHUB_OUTPUT"
    
  publish-release:
    runs-on: ubuntu-latest
    needs: draft-release
    steps:

      - name: Checkout
        uses: actions/checkout@v4
        with: 
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com

      - name: Get the actual commit for the tag
        id: get-commit
        run: echo ::set-output name=commit::$(git rev-list -n 1 ${{ needs.draft-release.outputs.version }}-actual)

      - name: Update Tag to Specific Commit
        uses: octokit/request-action@v2.x
        with:
          route: PATCH /repos/{owner}/{repo}/git/refs/tags/${{ needs.draft-release.outputs.version }}
          owner: ${{ github.repository_owner }}
          repo: ${{ github.event.repository.name }}
          sha: ${{ steps.get-commit.outputs.sha }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}